apiVersion: apps/v1
kind: Deployment
metadata:
  name: py-flask-app
  namespace: py-flask-app
  labels:
    app: py-flask-app
    version: v1.0.0
    environment: dev
spec:
  replicas: 2
  selector:
    matchLabels:
      app: py-flask-app
  template:
    metadata:
      labels:
        app: py-flask-app
        version: v1.0.0
    spec:
      containers:
      - name: py-flask-app
        image: acrdev9vgrsdq8.azurecr.io/py-flask:v1.0.0
        imagePullPolicy: Always
        ports:
        - containerPort: 8087
          name: http
        env:
        - name: FLASK_ENV
          value: "production"
        - name: PORT
          value: "8087"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8087
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8087
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
      restartPolicy: Always
      nodeSelector:
        nodepool-type: user  # 部署到用戶節點池
      tolerations:
      - key: "workload"
        operator: "Equal"
        value: "applications"
        effect: "NoSchedule"